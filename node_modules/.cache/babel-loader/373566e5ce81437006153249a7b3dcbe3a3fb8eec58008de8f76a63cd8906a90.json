{"ast":null,"code":"var _jsxFileName = \"/Users/elite/projece data/excel-analyze/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hardware_projects = [\"射箭比赛\", \"布袋球\", \"百米短跑\", \"划艇比赛\", \"滑板比赛\", \"掰手腕\", \"投篮大师\", \"谁是大力士\", \"新乒乓球大战\", \"跳绳抛射\", \"耐力跳跃\", \"乒乓球大战\", \"打水漂\", \"飞盘射击\", \"toio 保龄球\", \"太鼓小火车\", \"魔法烟花秀\", \"魔杖泡泡龙\", \"合成大西瓜\", \"投篮挑战\"];\nfunction App() {\n  _s();\n  const inputRef = useRef();\n  const handleFile = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const data = await file.arrayBuffer();\n    const workbook = XLSX.read(data);\n    const sheet = workbook.Sheets[workbook.SheetNames[0]];\n    const json = XLSX.utils.sheet_to_json(sheet);\n\n    // 分类\n    json.forEach(row => {\n      row['项目类型'] = hardware_projects.includes(row['小类']) ? '硬件项目' : '纯软项目';\n    });\n\n    // 门店前3\n    const storeMap = {};\n    json.forEach(row => {\n      const key = `${row['门店']}_${row['项目类型']}`;\n      if (!storeMap[key]) storeMap[key] = {};\n      storeMap[key][row['小类']] = (storeMap[key][row['小类']] || 0) + row['时长（小时）'];\n    });\n    const storeTop3 = [];\n    Object.entries(storeMap).forEach(([key, value]) => {\n      const [store, type] = key.split('_');\n      Object.entries(value).sort((a, b) => b[1] - a[1]).slice(0, 3).forEach(([proj, hours]) => {\n        storeTop3.push({\n          门店: store,\n          项目类型: type,\n          小类: proj,\n          总时长: hours\n        });\n      });\n    });\n\n    // 汇总\n    const sumMap = {};\n    json.forEach(row => {\n      const key = `${row['项目类型']}_${row['小类']}`;\n      sumMap[key] = (sumMap[key] || 0) + row['时长（小时）'];\n    });\n    const summary = [];\n    ['硬件项目', '纯软项目'].forEach(type => {\n      Object.entries(sumMap).filter(([k]) => k.startsWith(type)).sort((a, b) => b[1] - a[1]).slice(0, 3).forEach(([k, hours]) => {\n        summary.push({\n          项目类型: type,\n          小类: k.split('_')[1],\n          总时长: hours\n        });\n      });\n    });\n\n    // 导出\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(storeTop3), '门店前3项目');\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(summary), '汇总');\n    XLSX.writeFile(wb, '整理结果.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excel\\u9879\\u76EE\\u5206\\u7C7B\\u6574\\u7406\\u5DE5\\u5177\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx,.xls\",\n      ref: inputRef,\n      onChange: handleFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u4E0A\\u4F20Excel\\u6587\\u4EF6\\uFF0C\\u81EA\\u52A8\\u6574\\u7406\\u5E76\\u4E0B\\u8F7D\\u7ED3\\u679C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u8868\\u5934\\u9700\\u5305\\u542B\\uFF1A\\u95E8\\u5E97\\u3001\\u5C0F\\u7C7B\\u3001\\u65F6\\u957F\\uFF08\\u5C0F\\u65F6\\uFF09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u652F\\u6301.xlsx/.xls\\u683C\\u5F0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","XLSX","jsxDEV","_jsxDEV","hardware_projects","App","_s","inputRef","handleFile","e","file","target","files","data","arrayBuffer","workbook","read","sheet","Sheets","SheetNames","json","utils","sheet_to_json","forEach","row","includes","storeMap","key","storeTop3","Object","entries","value","store","type","split","sort","a","b","slice","proj","hours","push","门店","项目类型","小类","总时长","sumMap","summary","filter","k","startsWith","wb","book_new","book_append_sheet","json_to_sheet","writeFile","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","ref","onChange","_c","$RefreshReg$"],"sources":["/Users/elite/projece data/excel-analyze/src/App.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport * as XLSX from 'xlsx';\n\nconst hardware_projects = [\n  \"射箭比赛\", \"布袋球\", \"百米短跑\", \"划艇比赛\", \"滑板比赛\", \"掰手腕\",\n  \"投篮大师\", \"谁是大力士\", \"新乒乓球大战\", \"跳绳抛射\", \"耐力跳跃\", \"乒乓球大战\",\n  \"打水漂\", \"飞盘射击\", \"toio 保龄球\", \"太鼓小火车\", \"魔法烟花秀\", \"魔杖泡泡龙\",\n  \"合成大西瓜\", \"投篮挑战\"\n];\n\nfunction App() {\n  const inputRef = useRef();\n\n  const handleFile = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const data = await file.arrayBuffer();\n    const workbook = XLSX.read(data);\n    const sheet = workbook.Sheets[workbook.SheetNames[0]];\n    const json = XLSX.utils.sheet_to_json(sheet);\n\n    // 分类\n    json.forEach(row => {\n      row['项目类型'] = hardware_projects.includes(row['小类']) ? '硬件项目' : '纯软项目';\n    });\n\n    // 门店前3\n    const storeMap = {};\n    json.forEach(row => {\n      const key = `${row['门店']}_${row['项目类型']}`;\n      if (!storeMap[key]) storeMap[key] = {};\n      storeMap[key][row['小类']] = (storeMap[key][row['小类']] || 0) + row['时长（小时）'];\n    });\n    const storeTop3 = [];\n    Object.entries(storeMap).forEach(([key, value]) => {\n      const [store, type] = key.split('_');\n      Object.entries(value)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 3)\n        .forEach(([proj, hours]) => {\n          storeTop3.push({ 门店: store, 项目类型: type, 小类: proj, 总时长: hours });\n        });\n    });\n\n    // 汇总\n    const sumMap = {};\n    json.forEach(row => {\n      const key = `${row['项目类型']}_${row['小类']}`;\n      sumMap[key] = (sumMap[key] || 0) + row['时长（小时）'];\n    });\n    const summary = [];\n    ['硬件项目', '纯软项目'].forEach(type => {\n      Object.entries(sumMap)\n        .filter(([k]) => k.startsWith(type))\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 3)\n        .forEach(([k, hours]) => {\n          summary.push({ 项目类型: type, 小类: k.split('_')[1], 总时长: hours });\n        });\n    });\n\n    // 导出\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(storeTop3), '门店前3项目');\n    XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(summary), '汇总');\n    XLSX.writeFile(wb, '整理结果.xlsx');\n  };\n\n  return (\n    <div className=\"App\" style={{ padding: 40 }}>\n      <h2>Excel项目分类整理工具</h2>\n      <input type=\"file\" accept=\".xlsx,.xls\" ref={inputRef} onChange={handleFile} />\n      <p>上传Excel文件，自动整理并下载结果</p>\n      <ul>\n        <li>表头需包含：门店、小类、时长（小时）</li>\n        <li>支持.xlsx/.xls格式</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}